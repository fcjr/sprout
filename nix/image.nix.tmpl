let 
  nixos = import <nixpkgs/nixos> {
    system = "aarch64-linux";
    configuration = { lib, pkgs, config, ... }: {
      imports = [
        <nixpkgs/nixos/modules/installer/sd-card/sd-image-aarch64-installer.nix>
      ];
      
      system.stateVersion = "24.11";
      # The installer starts with a "nixos" user to allow installation, so add the SSH key to
      # that user. Note that the key is, at the time of writing, put in `/etc/ssh/authorized_keys.d`
{{- if .SSHKeys }}
      users.extraUsers.nixos.openssh.authorizedKeys.keys = [
{{- range .SSHKeys }}
        "{{ . }}"
{{- end }}
      ];
{{- end }}
      # bzip2 compression takes loads of time with emulation, skip it.
      sdImage.compressImage = false;
      # OpenSSH is forced to have an empty `wantedBy` on the installer system[1], this won't allow it
      # to be started. Override it with the normal value.
      # [1] https://github.com/NixOS/nixpkgs/blob/9e5aa25/nixos/modules/profiles/installation-device.nix#L76
      systemd.services.sshd.wantedBy = lib.mkOverride 40 [ "multi-user.target" ];
      # Enable OpenSSH out of the box.
      services.openssh.enable = true;
      
      # Add git to system packages
      environment.systemPackages = with pkgs; [];
      
      # Enable Nix flakes
      nix.settings.experimental-features = [ "nix-command" "flakes" ];
      
{{- if .Wireless.Enabled }}
      # Configure WiFi without conflicting services
      networking.networkmanager.enable = lib.mkForce false;
      networking.wireless.enable = true;
{{- if .Wireless.Networks }}
      networking.wireless.networks = {
{{- range $ssid, $config := .Wireless.Networks }}
        "{{ $ssid }}" = {
{{- if $config.PSK }}
          psk = "{{ $config.PSK }}";
{{- end }}
        };
{{- end }}
      };
{{- end }}
{{- end }}
    };
  };
in nixos.config.system.build.sdImage